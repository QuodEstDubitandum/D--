package lexer

var ASCIIMap = map[TokenType]string{
	ILLEGAL: "Illegal token",
	EOF: "EOF token",
	ID: "Identifier",
	INT: "Integer",
	FLOAT: "Float",
	LRBRKT: "Left round bracket",
	RRBKRT: "Right round bracket",
	LCBRKT: "Left curly bracket",
	RCBRKT: "Right curly bracket",
	LSBRKT: "Left square bracket",
	RSBRKT: "Right square bracket",
	ASSIGN: "Assignment operator",
	GREATER: "Greater than operator",
	SMALLER: "Smaller than operator",
	NOT_EQUAL: "Not equal operator",
	EQUAL: "Equal operator",
	GOR_EQUAL: "Greater or equal operator",
	SOR_EQUAL: "Smaller or equal operator",
	MAPS_TO: "Maps to operator",
	PLUS: "Plus operator", 
	MINUS: "Minus operator",
	ASTERISK: "Asterisk operator",
	PLUS_EQUAL: "Plus equal operator",
	MINUS_EQUAL: "Minus equal operator",
	DOUBLE_ASTERISK: "Double asterisk operator",
	SLASH: "Slash operator",
	PERCENT: "Percent operator",
	DOLLAR: "Dollar operator",
	EXCLAMATION: "Exclamation operator", 
	QUESTION: "Question operator",
	AMPERSAND: "Ampersand operator",
	PIPE: "Pipe operator",
	COMMA: "Comma operator",
	SEMICOLON: "Semicolon operator",
	DOT: "Dot operator",
	DOUBLEDOT: "Double dot operator",
	FUNCTION: "Function keyword",
	CONST: "Const keyword",
	VAR: "Var keyword",
	FOR: "For keyword",
	IF: "If keyword",
	ELSE: "Else keyword",
	RETURN: "Return keyword",
	BREAK: "Break keyword",
	SPACE: "Space",
	TAB: "Tab",
	NEWLINE: "Newline",
}